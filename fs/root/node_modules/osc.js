var osc = require('osc-min');
var dgram = require('dgram');

var Client = function (host, port) {
    this.host = host;
    this.port = port;
    this._sock = dgram.createSocket('udp4');
    this.kill = function() {
        this._sock.close();
    };
    this.send = function(data) {
    	this._sock.send(data, 0, data.length, port, host);
    }
};

var my_client;

var value = 0;

var output_values = [0,0,0,0];

module.exports = {
	connect: function(host, port) {
		console.log("Opening UDP datagram client to host " + host + " on port " + port);
		my_client = new Client(host, port);
	},
	transmitFaderData: function (faderNumber, floatValue) {
        var midiValue = Math.round(floatValue * 255.0);
        if (output_values[faderNumber] != midiValue) {
            output_values[faderNumber] = midiValue;
            var channelNumber = 50 + faderNumber;
            console.log("midiValue: " + midiValue + " channelNumber: " + channelNumber);
    		my_client.send(osc.toBuffer({address:'/midi', args: [
                // channel is the midi device (which will always be zero for this project)
                // status is the midi value for a given sensor
                // data1 is the "control change number" which corresponds to each sensor - we will start at 50
                // data2 is always b0 - probably corresponds to control change message type
                {type : "midi", value : { channel : 0, status: midiValue, data1: channelNumber, data2: 0xb0 } }
            ]}));
        }
	}
}