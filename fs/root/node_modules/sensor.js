
//
// Node moudle that represents a sensor
//

var smoother = require('smoother.js');
var osc = require('osc.js');

/*

Sensors are created with the necessary Fader and OSC Client information, and are responsible
for sending properly-smoothed values to the OSC host, as appropriate when updated.

*/

function Sensor(ip, smootherSize, oscHost, oscPort, midiChannel, debug) {
	this.ip = ip
	this.smoother = smoother.createSmoother(smootherSize);
	this.fader = osc.createFader(oscHost, oscPort, midiChannel);
	this.last = 0;
	this.debug = debug;
	console.log(
		"Setting up sensor object for IP address: " + ip + 
		" to osc host " + oscHost + " on port " + oscPort + " with debug " + debug + "."
	);
}

Sensor.prototype.pushInput = function (distanceInInches) {
	// push new input
	this.smoother.pushInput(distanceInInches);
	var smoothed = this.smoother.average();

	if (smoothed != this.last) {
		this.last = smoothed;
		if (this.debug) {
			console.log("Sending data to fader from sensor with IP: " + this.ip + " value: " + this.last);
		}
		this.fader.send(this.last)
	}
}

Sensor.prototype.toString = function () {
	return "[Sensor object]";
}

module.exports = {
	createSensor: function(ip, smootherSize, oscHost, oscPort, midiChannel, debug) {
		return new Sensor(ip, smootherSize, oscHost, oscPort, midiChannel, debug);
	}
}